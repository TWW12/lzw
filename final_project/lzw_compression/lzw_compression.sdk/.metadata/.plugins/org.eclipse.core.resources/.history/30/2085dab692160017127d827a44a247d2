/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "xbasic_types.h"
#include "axi_compression.h"
#include "xil_io.h"



Xuint32 *input_fifo_wr_en = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR);
Xuint32 *input_fifo_din = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+4);
Xuint32 *input_fifo_full = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+8);
Xuint32 *file_size = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+12);
Xuint32 *output_fifo_rd_en = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+16);
Xuint32 *output_fifo_dout = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+20);
Xuint32 *output_fifo_full = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+24);
Xuint32 *output_fifo_empty = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+28);
Xuint32 *compression_done = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+32);
Xuint32 *input_fifo_rst = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+36);
Xuint32 *output_fifo_rst = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+40);
Xuint32 *lzw_rst = (Xuint32)(XPAR_AXI_COMPRESSION_0_S00_AXI_BASEADDR+44);




int main()
{

    init_platform();

    char input[43] = "the rain in Spain falls mainly on the plain";
    int result[100] = {0};

    *lzw_rst = 0x00000001;




    *input_fifo_wr_en = 0x00000000;
    *input_fifo_rst = 0x00000001;
    *output_fifo_rst = 0x00000001;

    *input_fifo_rst = 0x00000000;
    *output_fifo_rst = 0x00000000;
    *file_size = 43;

    int i;
    for(i=0; i<43; i++)
    {

    	*input_fifo_din = input[i];

    	*input_fifo_wr_en = 0x00000001;
    	*input_fifo_wr_en = 0x00000000;

    }
    //*lzw_rst = 0x00000001;




    int done = *compression_done;
    *lzw_rst = 0x00000000;

    while(done == 0)
    {	xil_printf("done = %d\n", done);
    	done = *compression_done;
    }


    for(i=0; i<33; i++)
    {
    	result[i] = *output_fifo_dout;
    	*output_fifo_rd_en = 0x00000001;
    	*output_fifo_rd_en = 0x00000000;
    }

    for(i=0; i<33; i++)
    {
    	xil_printf("result[%d] = %d\n", i, result[i]);
    }

    for(i=0; i<43; i++)
    {
    	xil_printf("input[%d] = %d\n", i, input[i]);
    }



    cleanup_platform();
    return 0;
}
